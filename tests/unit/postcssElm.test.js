const fs = require("fs");
const postcss = require("postcss");
const { postcssElm } = require("../../src/index");
const { runElmModuleTests } = require("../util");
const css = `.foo { color: limegreen; }`;

test("It writes an Elm module.", () => {
  const expected = `-- Elm CSS Module, generated by postcss-elm-modules
module Styles exposing (styles)


styles =
    { foo = "file__foo---16mC4"
    }`;
  postcssElm(
    {
      cssModules: {
        enabled: true,
        scopePattern: "[name]__[local]---[hash:base64:5]"
      },
      dir: "tests/unit",
      moduleName: "styles"
    },
    postcss.parse(css)
  ).then(() => {
    const path = "tests/unit/Styles.elm";
    runElmModuleTests(fs.readFileSync(path, "utf8"), expected).then(() => {
      fs.unlinkSync(path);
    });
  });
});

test("It writes an Elm module with a custom name.", () => {
  const expected = `-- Elm CSS Module, generated by postcss-elm-modules
module Bar exposing (bar)


bar =
    { foo = "file__foo---2tS6k"
    }`;
  postcssElm(
    {
      cssModules: {
        enabled: true,
        scopePattern: "[name]__[local]---[hash:base64:5]"
      },
      dir: "tests/unit",
      moduleName: "bar"
    },
    postcss.parse(css)
  ).then(() => {
    const path = "tests/unit/Bar.elm";
    runElmModuleTests(
      fs.readFileSync("tests/unit/Bar.elm", "utf8"),
      expected
    ).then(() => {
      fs.unlinkSync(path);
    });
  });
});
