const fs = require('fs')
const single = `.foo { color: limegreen; }`
const atRule = `@elmModule Foo tests/integration; .bar { color: tomato; }`
const elmSingle = `-- Elm CSS Module, generated by postcss-elm-modules
module Styles exposing (styles)


styles =
    { foo = "file__foo---16mC4"
    }`
const elmArgsApplied = `-- Elm CSS Module, generated by postcss-elm-modules
module Foo exposing (foo)


foo =
    { bar = "file__bar---R3z52"
    }`

/**
 * Test an Elm module's value within a Promise.
 *
 * @param {string} resultString The received string.
 * @param {string} expected The expected string.
 * @return {Promise} Promise resolved with the result of the test.
 */
function runElmModuleTests (resultString, expected) {
  return new Promise(resolve => resolve(expect(resultString).toEqual(expected)))
}

/**
 * Run a test that writes a file and then remove that file once the test is complete.
 *
 * @param {string} path File path.
 * @param {string} expected The expected test value.
 */
function testAndUnlink (path, expected) {
  runElmModuleTests(fs.readFileSync(path, 'utf8'), expected).then(() =>
    fs.unlinkSync(path)
  )
}

module.exports = {
  cssFixtures: {
    atRule,
    single
  },
  elmFixtures: {
    elmSingle,
    elmArgsApplied
  },
  runElmModuleTests,
  testAndUnlink
}
